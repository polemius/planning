{"version":3,"sources":["DayMonthDatepicker.js","App.js","reportWebVitals.js","index.js"],"names":["registerLocale","ru","months","DayMonthDatepicker","props","dateFormat","selected","value","placeholderText","popperPlacement","renderCustomHeader","date","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","margin","display","justifyContent","onClick","disabled","getMonth","onChange","target","indexOf","map","option","locale","name","popperModifiers","offset","enabled","Date","sumNumber","number","n","String","split","reduce","acc","Number","App","useState","dob","setDob","setDate","numbers","undefined","yearNumber","monthNumber","dayNumber","dobDay","getDate","dobMonth","year","getYear","month","day","calculate","className","htmlFor","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60af3ef8.chunk.js","sourcesContent":["import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\";\nimport ru from \"date-fns/locale/ru\";\nimport { getMonth } from \"date-fns\";\nregisterLocale(\"ru\", ru);\n\nconst months = [\n  \"Январь\",\n  \"Февраль\",\n  \"Март\",\n  \"Апрель\",\n  \"Май\",\n  \"Июнь\",\n  \"Июль\",\n  \"Август\",\n  \"Сентябрь\",\n  \"Октябрь\",\n  \"Ноябрь\",\n  \"Декабрь\",\n];\n\nconst DOB_FORMAT = \"dd MMMM\";\n\nconst DayMonthDatepicker = (props) => {\n  return (\n    <DatePicker\n      dateFormat={DOB_FORMAT}\n      selected={props.value}\n      placeholderText=\"День рождения\"\n      popperPlacement=\"right\"\n      renderCustomHeader={({\n        date,\n        changeMonth,\n        decreaseMonth,\n        increaseMonth,\n        prevMonthButtonDisabled,\n        nextMonthButtonDisabled,\n      }) => {\n        return (\n          <div\n            style={{\n              margin: 10,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n              {\"<\"}\n            </button>\n            <select\n              value={months[getMonth(date)]}\n              onChange={({ target: { value } }) =>\n                changeMonth(months.indexOf(value))\n              }\n            >\n              {months.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n\n            <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n              {\">\"}\n            </button>\n          </div>\n        );\n      }}\n      locale=\"ru\"\n      name=\"dob\"\n      popperModifiers={{\n        offset: {\n          enabled: true,\n          offset: \"0px, 0px\",\n        },\n      }}\n      onChange={(date) => {\n        if (date instanceof Date) {\n          props.onChange(date);\n        }\n      }}\n    />\n  );\n};\n\nexport default DayMonthDatepicker;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport DayMonthDatepicker from \"./DayMonthDatepicker\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getDate, getMonth, getYear } from \"date-fns\";\n\nfunction sumNumber(number) {\n  const n = String(number)\n    .split(\"\")\n    .reduce((acc, value) => acc + Number(value), 0);\n  if (n < 10) {\n    return n;\n  }\n\n  return sumNumber(n);\n}\n\nfunction calculate(dob, date) {\n  if (dob === undefined) {\n    return { yearNumber: \"\", monthNumber: \"\", dayNumber: \"\" };\n  }\n  const dobDay = sumNumber(getDate(dob));\n  const dobMonth = sumNumber(getMonth(dob) + 1);\n  const year = sumNumber(getYear(date));\n\n  const month = sumNumber(getMonth(date) + 1);\n  const day = sumNumber(getDate(date));\n\n  const yearNumber = sumNumber(dobDay + dobMonth + year);\n  const monthNumber = sumNumber(yearNumber + month);\n  const dayNumber = sumNumber(monthNumber + day);\n\n  return { yearNumber, monthNumber, dayNumber };\n}\n\nfunction App() {\n  const [dob, setDob] = useState();\n  const [date, setDate] = useState(new Date());\n\n  const numbers = calculate(dob, date);\n  return (\n    <div className=\"main\">\n      <header>Планирование по нумерологии</header>\n      <div>\n        <div className=\"container__calc\">\n          <div className=\"calc_dob\">\n            <label htmlFor=\"dob\">День рождения:</label>\n            <DayMonthDatepicker value={dob} onChange={setDob} />\n          </div>\n\n          <div className=\"date\">\n            <label htmlFor=\"date\">Расчет на дату:</label>\n            <DatePicker\n              name=\"date\"\n              dateFormat={\"dd-MM-yyyy\"}\n              selected={date}\n              onChange={(d) => {\n                if (d instanceof Date) {\n                  setDate(d);\n                }\n              }}\n            />\n          </div>\n          <div className=\"calculations\">\n            {numbers.yearNumber === \"\" && (\n              <p className=\"error\">Выберете дату рождения</p>\n            )}\n            <p className=\"number\">Число года: {numbers.yearNumber}</p>\n            <p className=\"number\">Число месяца: {numbers.monthNumber}</p>\n            <p className=\"number\">Число дня: {numbers.dayNumber}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}